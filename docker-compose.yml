version: "3"
services:
    app:
        build:
            context: .
        ports:
            - "8000:8000"
        volumes:
            - .:/app
        command: >
            sh -c " python manage.py wait_for_db &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
        environment:
            - PYTHONUNBUFFERED=1
        env_file:
            - .env
        depends_on:
            - db

    db:
        image: postgres:14-alpine
        ports:
            - "5433:5432"
        env_file:
            - .env

    redis:
        image: redis:alpine

    celery_worker:
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .:/app
        command: celery -A library_api_service worker -l info
        depends_on:
            - db
            - redis
            - app
        restart: on-failure
        env_file:
            - .env

    celery_beat:
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .:/app
        command: celery -A library_api_service beat -l info
        env_file:
            - .env
        depends_on:
           - app
           - db
           - redis
           - celery_worker
